{"version":3,"sources":["job.js"],"names":[],"mappings":"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","file":"job.js","sourcesContent":["\nimport EventEmitter from 'eventemitter3';\n\nexport default class Job extends EventEmitter {\n  constructor(pool) {\n    super();\n    this.pool   = pool;\n    this.thread = null;\n\n    this.runArgs = [];\n    this.clearSendParameter();\n\n    pool.emit('newJob', this);\n  }\n\n  run(...args) {\n    if (args.length === 0) {\n      throw new Error('Cannot call .run() without arguments.');\n    }\n\n    this.runArgs = args;\n    return this;\n  }\n\n  send(...args) {\n    if (this.runArgs.length === 0) {\n      throw new Error('Cannot .send() before .run().');\n    }\n\n    if (this.hasSendParameter()) {\n      // do not alter this job, clone it and set send param instead\n      return this.clone().clearSendParameter().send(...args);\n    }\n\n    this.sendArgs = args;\n    this.parameterSet = true;\n\n    this.emit('readyToRun');\n    return this;\n  }\n\n  executeOn(thread) {\n    this.emit('hasThread', thread);\n    thread\n      .once('message', this.emit.bind(this, 'done'))\n      .once('error', this.emit.bind(this, 'error'))\n      .run(...this.runArgs)\n      .send(...this.sendArgs);\n\n    this.thread = thread;\n\n    return this;\n  }\n\n  promise() {\n    return new Promise((resolve, reject) => {\n      if (this.thread) {\n        resolve(this.thread.promise());\n      } else {\n        this.once('hasThread', (thread) => {\n          if (!thread) {\n            reject(new Error('Cannot return promise, since job is not executed.'));\n          } else {\n            resolve(thread.promise());\n          }\n        });\n      }\n    });\n  }\n\n  clone() {\n    const clone = new Job(this.pool);\n\n    if (this.runArgs.length > 0) {\n      clone.run(...this.runArgs);\n    }\n    if (this.parameterSet) {\n      clone.send(...this.sendArgs);\n    }\n\n    return clone;\n  }\n\n  hasSendParameter() {\n    return this.parameterSet;\n  }\n\n  clearSendParameter() {\n    this.parameterSet  = false;\n    this.sendArgs = [];\n    return this;\n  }\n}\n"],"sourceRoot":"/source/"}